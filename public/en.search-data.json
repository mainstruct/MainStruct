{"/en/about/":{"data":{"":"Hextra is designed to be a simple, fast, and flexible theme for building modern static websites. It is especially well-suited for documentation websites but can also be used for various types of sites, such as blogs, portfolios, and more.\nHugo, like Jekyll, is a static site generator. What sets Hugo apart is that it is a single binary, making it easy to install and run on various platforms. It is also extremely fast and reliable, capable of rendering a site with thousands of pages in milliseconds.\nHextra is built with a mindset focused on having a minimal footprint. To get started, no extra dependencies like Node.js packages are required; all you need is a single YAML configuration file, along with your Markdown content. Thus, we can focus on writing quality content instead of setting up tooling.","credits#Credits":"Hextra cannot be built without the following tools and inspirations:\nHugo Tailwind CSS Heroicons Nextra Next.js"},"title":"About"},"/en/blog/":{"data":{"":"RSS Feed"},"title":"Blog"},"/en/blog/hextra-v0.10/":{"data":{"":"Hextra v0.10.0 is a big release packed with new capabilities, architectural upgrades, and quality-of-life improvements.\nIt also includes contributions from 10 new contributors and addresses long-standing community requests.\nUpgrade Guide\rImportant\nBreaking Changes: This release includes several breaking changes. Please review the checklist and the Migration Guide before upgrading.\nBefore upgrading to v0.10.0, ensure that you have:\nHugo v0.146.0+ (extended version) installed Reviewed custom CSS for class name changes (see CSS Class Prefix Changes and Tailwind CSS v4) Verified that build environment has internet access for asset downloads when LaTeX and/or Mermaid is used Once ready, update the Hugo module:\nhugo mod get -u github.com/imfing/hextra@v0.10.0\rNew Features\rHere is a list of notable new features in this release:\nDropdown Menu Support in Navbar: create hierarchical navigation menus Enhanced Search Experience: improved search across all headings with better accuracy llms.txt Support: generate AI-friendly site outline Table of Contents Scroll Highlighting: automatic heading highlighting during page scroll Synchronized Tab Switching: synchronize tab selections across multiple tab groups Blog List Pagination: add pagination controls to blog listing pages MathJax Support: alternative math rendering engine alongside KaTeX Dropdown Menu Support in Navbar\rCreate dropdown menus in your navigation bar for better navigation items organization.\nhugo.yamlmenu: main: - identifier: products name: \"Products\" - name: \"Product A\" parent: products url: \"/product-a\" - name: \"Product B\" parent: products url: \"/product-b\"\rEnhanced Search Experience\rSearch in all headings: find content across all heading levels, not just page titles Improved result accuracy: better title handling and linking precision Fixed result navigation: search results now link to the correct page sections Huge thanks to @ldez for pushing the search capabilities forward!\nllms.txt Support\rHextra now supports llms.txt output format for your site, making your site more accessible to AI tools and language models for context and reference.\nhugo.yamloutputs: home: [html, llms]\rThis will generate an llms.txt file at your site’s root.\nTable of Contents Scroll Highlighting\rThe table of contents now automatically highlights the current section as you scroll through the page, making navigation more intuitive.\nSynchronized Tab Switching\rTabs with the same items now synchronize across the page. When sync is enabled, selecting a tab updates all tab groups that share the same items list (and your selection is remembered).\nhugo.yamlparams: page: tabs: sync: true\rBlog List Pagination\rBasic pagination controls have been added to blog listing pages.\nhugo.yamlparams: blog: list: pagerSize: 20 # Posts per page\rMathJax Support\rRender mathematical expressions with MathJax alongside the default KaTeX support. Choose the engine that best fits your needs.\nhugo.yamlparams: math: engine: \"mathjax\" # default is \"katex\"\rTechnical Improvements\rFramework and Build System\rTailwind CSS v4 Migration: complete migration to Tailwind CSS v4 with improved customization support. Hugo Template System: adapted to Hugo’s new template system (v0.146.0+) for future compatibility. Math Server-Side Rendering: better handling of math equation rendering using Hugo native rendering by default. FlexSearch 0.8 Upgrade: upgraded search engine FlexSearch for faster, more accurate results with improved CJK (Chinese, Japanese, Korean) content encoding. Enhanced Asset Management: KaTeX and Mermaid assets support loading from CDN or local Quality of Life Improvements\rDynamic favicon switching: automatic favicon updates based on color scheme preferences Reverse pagination: authors can now set reversePagination in page front matter Google indexing control: new page parameter to block Google indexing when needed Width handling improvements: better responsive design controls via CSS variables Styling improvements: modern styles for Markdown table and horizontal line Bug Fixes and Stability\rGiscus theme synchronization: comments now properly follow dark/light mode switches Search result accuracy: fixed linking issues and title escaping in search results Tab switching: resolved navigation issues in non-synced tab mode Phantom scrolling: fixed unwanted scroll behavior when footer is disabled Image accessibility: prevented duplicate alt text rendering Link rendering: improved base URL handling for complex site structures Migration Guide\rHugo Version Requirements: Requires Hugo v0.146.0+ (extended version) CSS Class Prefix Changes: Component CSS classes now use consistent hextra- prefixing Asset Management: KaTeX and Mermaid assets now download during build time Tailwind CSS v4: Internal CSS compilation now uses Tailwind CSS v4.x with hx: prefix","asset-management-for-katex-and-mermaid#Asset Management for KaTeX and Mermaid":"Impact: Sites using KaTeX or Mermaid\nHextra v0.10.0 now downloads KaTeX and Mermaid assets from CDN during build time.\nWhat’s changed:\nBuild process now requires internet access to download these assets No more external CDN calls for these assets after build Action required:\nEnsure your build environment has internet access to download assets Sites in air-gapped environments may need to pre-download these assets and configure Hextra to load them","blog-list-pagination#Blog List Pagination":"","bug-fixes-and-stability#Bug Fixes and Stability":"","contributors#Contributors":"This release was made possible by contributions from 10 new contributors:\n@oosquare - KaTeX fonts, image render hooks, link handling improvements @Zabriskije - Phantom scroll fix @miniwater - Custom footer centering, image alt text improvements @MattDodsonEnglish - Google indexing controls, OpenGraph documentation @KStocky - Reverse pagination feature @PrintN - Documentation showcase additions @hobobandy - Title spacing improvements @dlwocks31 - Korean translation updates @TwoAnts - Giscus theme switching fix @ldez - Search improvements and bug fixes Additional thanks to returning contributors @deining and @yuri1969 for their continued support with documentation, translations, and technical improvements.\nFull Changelog: https://github.com/imfing/hextra/compare/v0.9.7...v0.10.0","css-class-prefix-changes#CSS Class Prefix Changes":"Impact: Sites with custom CSS targeting Hextra component classes\nHextra v0.10.0 introduces consistent hextra- prefixing for majority of component CSS classes to improve maintainability and prevent conflicts with user styles.\nAction required: If you have custom CSS targeting Hextra components, update the following class names:\nArea Before After Search (container) .search-wrapper .hextra-search-wrapper Search (input) .search-input .hextra-search-input Search (results) .search-results .hextra-search-results Search (title) .search-wrapper .title .hextra-search-wrapper .hextra-search-title Search (active item) .search-wrapper .active .hextra-search-wrapper .hextra-search-active Search (no result) .search-wrapper .no-result .hextra-search-wrapper .hextra-search-no-result Search (prefix) .search-wrapper .prefix .hextra-search-wrapper .hextra-search-prefix Search (excerpt) .search-wrapper .excerpt .hextra-search-wrapper .hextra-search-excerpt Search (match) .search-wrapper .match .hextra-search-wrapper .hextra-search-match Navbar blur .nav-container-blur .hextra-nav-container-blur Hamburger menu .hamburger-menu .hextra-hamburger-menu Theme toggle .theme-toggle .hextra-theme-toggle Language switcher .language-switcher .hextra-language-switcher Sidebar container .sidebar-container .hextra-sidebar-container Sidebar active item .sidebar-active-item .hextra-sidebar-active-item Code filename .filename .hextra-code-filename Copy icon .copy-icon .hextra-copy-icon Success icon .success-icon .hextra-success-icon Steps .steps .hextra-steps","dropdown-menu-support-in-navbar#Dropdown Menu Support in Navbar":"","enhanced-search-experience#Enhanced Search Experience":"","framework-and-build-system#Framework and Build System":"","hugo-version-requirements#Hugo Version Requirements":"Impact: Sites running older Hugo versions\nHextra v0.10.0 requires Hugo v0.146.0 or later (extended version) due to the new template system adoption.\nAction required: Update Hugo to v0.146.0+ before upgrading Hextra","llmstxt-support#llms.txt Support":"","mathjax-support#MathJax Support":"","migration-guide#Migration Guide":"","new-features#New Features":"","quality-of-life-improvements#Quality of Life Improvements":"","synchronized-tab-switching#Synchronized Tab Switching":"","table-of-contents-scroll-highlighting#Table of Contents Scroll Highlighting":"","tailwind-css-v4#Tailwind CSS v4":"Impact: Sites with extensive custom CSS targeting Hextra Tailwind classes hx-*\nWhile Hextra handles the Tailwind CSS v4 migration internally, sites with heavy customizations may need further adjustments.\nWhat’s changed:\nInternal CSS compilation now uses Tailwind CSS v4.x Utility classes now prefix with hx: rather than hx-","technical-improvements#Technical Improvements":"","upgrade-guide#Upgrade Guide":""},"title":"Hextra v0.10"},"/en/docs/":{"data":{"":"👋 Hello! Welcome to the Hextra documentation!","features#Features":"Beautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding. Responsive Layout and Dark Mode - It looks great on all devices, from mobile, tablet to desktop. Dark mode is also supported to accommodate various lighting conditions. Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No JavaScript or Node.js are needed to use it. Full-text Search - Built-in offline full-text search powered by FlexSearch, no additional configuration required. Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcrumbs, pagination, sidebar navigation and more are all automatically generated. Multi-language and SEO Ready - Multi-language sites made easy with Hugo’s multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards.","next#Next":"Dive right into the following section to get started:\nGetting StartedLearn how to create website using Hextra","questions-or-feedback#Questions or Feedback?":"❓\rHextra is still in active development. Have a question or feedback? Feel free to open an issue!","what-is-hextra#What is Hextra?":"Hextra is a modern, fast and batteries-included Hugo theme built with Tailwind CSS. Designed for building beautiful websites for documentation, blogs, and websites, it provides out-of-the-box features and flexibility to meet various requirements."},"title":"Documentation"},"/en/docs/advanced/":{"data":{"":"This section covers some advanced topics of the theme.\nMulti-language\rCustomization\rComments System"},"title":"Advanced"},"/en/docs/advanced/comments/":{"data":{"":"Hextra supports adding comments system to your site. Currently giscus is supported.","giscus#giscus":"giscus is a comments system powered by GitHub Discussions. It is free and open source.\nTo enable giscus, you need to add the following to the site configuration file:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: repoId: category: categoryId: The giscus configurations can be constructed from the giscus.app website. More details can also be found there.\nComments can be enabled or disabled for a specific page in the page front matter:\ncontent/docs/about.md--- title: About comments: true ---"},"title":"Comments"},"/en/docs/advanced/customization/":{"data":{"":"Hextra offers some default customization options in the hugo.yaml config file to configure the theme. This page describes the available options and how to customize the theme further.","badge#Badge":"hextra-badge - The badge element","card#Card":"hextra-card - The card element hextra-card-image - The card image element hextra-card-icon - The card icon element hextra-card-subtitle - The card subtitle element","cards#Cards":"hextra-cards - The cards grid container","code-block#Code Block":"hextra-code-block - The code block container hextra-code-filename - The filename element for code blocks","code-copy-button#Code Copy Button":"hextra-code-copy-btn-container - The code copy button container hextra-code-copy-btn - The code copy button hextra-copy-icon - The copy icon element hextra-success-icon - The success icon element","component-layout-variables#Component Layout Variables":"Hextra provides CSS variables to customize the width of pages, navbar, and footer:\nassets/css/custom.css:root { /* Page width - also configurable via hugo.yaml params.page.width */ --hextra-max-page-width: 80rem; /* default: 80rem (normal), 90rem (wide), 100% (full) */ /* Navbar width - also configurable via hugo.yaml params.navbar.width */ --hextra-max-navbar-width: 90rem; /* independent navbar width */ /* Footer width - also configurable via hugo.yaml params.footer.width */ --hextra-max-footer-width: 80rem; /* independent footer width */ }","custom-css#Custom CSS":"To add custom CSS, we need to create a file assets/css/custom.css in our site. Hextra will automatically load this file.","custom-extra-section-in-footer#Custom Extra Section in Footer":"You can add extra section in the footer by creating a file layouts/partials/custom/footer.html in your site.\nlayouts/partials/custom/footer.html\rThe added section will be added before the copyright section in the footer. You can use HTML and Hugo template syntax to add your own content.\nHugo variables available in the footer section are: .switchesVisible and .displayCopyright.","custom-layouts#Custom Layouts":"The layouts of the theme can be overridden by creating a file with the same name in the layouts directory of your site. For example, to override the single.html layout for docs, create a file layouts/docs/single.html in your site.\nFor further information, refer to the Hugo Templates.","custom-scripts#Custom Scripts":"You may add custom scripts to the end of the head for every page by adding the following file:\nlayouts/partials/custom/head-end.html","feature-card#Feature Card":"hextra-feature-card - The feature card link element","feature-grid#Feature Grid":"hextra-feature-grid - The feature grid container","filetree#Filetree":"hextra-filetree - The filetree container","folder#Folder":"hextra-filetree-folder - The filetree folder container","font-family#Font Family":"The font family of the content can be customized using:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; }","footer#Footer":"hextra-footer - The footer element hextra-custom-footer - The custom footer section container","further-customization#Further Customization":"Didn’t find what you were looking for? Feel free to open a discussion or make a contribution to the theme!","further-theme-customization#Further Theme Customization":"The theme can be further customized by overriding the default styles via the exposed css classes. An example for customizing the footer element:\nassets/css/custom.css.hextra-footer { /* Styles will be applied to the footer element */ } .hextra-footer:is(html[class~=\"dark\"] *) { /* Styles will be applied to the footer element in dark mode */ }\rThe following classes can be used to customize various parts of the theme.","general#General":"hextra-scrollbar - The scrollbar element content - Page content container","inline-code-element#Inline Code Element":"The color of text mixed with other text can customized with:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; }","jupyter-notebook#Jupyter Notebook":"hextra-jupyter-code-cell - The Jupyter code cell container hextra-jupyter-code-cell-outputs-container - The Jupyter code cell outputs container hextra-jupyter-code-cell-outputs - The Jupyter code cell output div element","language-switcher#Language Switcher":"hextra-language-switcher - The language switcher button hextra-language-options - The language options container","navbar#Navbar":"hextra-nav-container - The navbar container hextra-nav-container-blur - The navbar container in blur element hextra-hamburger-menu - The hamburger menu button","pdf#PDF":"hextra-pdf - The PDF container element","primary-color#Primary Color":"The primary color of the theme can be customized by setting the --primary-hue, --primary-saturation and --primary-lightness variables:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; --primary-lightness: 50%; }","search#Search":"hextra-search-wrapper - The search wrapper container hextra-search-input - The search input element hextra-search-results - The search results list container Optional nested classes used within the search UI:\nhextra-search-title - The result title element hextra-search-active - The active result anchor hextra-search-no-result - The empty state element hextra-search-prefix - The breadcrumb/prefix label for grouped results hextra-search-excerpt - The result snippet text hextra-search-match - The highlighted query span","shortcodes#Shortcodes":"","sidebar#Sidebar":"hextra-sidebar-container - The sidebar container hextra-sidebar-active-item - The active item in the sidebar","steps#Steps":"hextra-steps - The steps container","syntax-highlighting#Syntax Highlighting":"List of available syntax highlighting themes are available at Chroma Styles Gallery. The stylesheet can be generated using the command:\nhugo gen chromastyles --style=github\rTo override the default syntax highlighting theme, we can add the generated styles to the custom CSS file.","table-of-contents#Table of Contents":"hextra-toc - The table of contents container","tabs#Tabs":"hextra-tabs-panel - The tabs panel container hextra-tabs-toggle - The tabs toggle button","tailwind-theme-variables#Tailwind Theme Variables":"Starting with Hextra v0.10.0, which is built on Tailwind CSS v4, you can customize the theme by overriding CSS variables inside the @layer theme block.\nThis lets you customize the global look and feel without having to modify every individual class.\nassets/css/custom.css@layer theme { :root { --hx-default-mono-font-family: \"JetBrains Mono\", monospace; } }\rCheck out Tailwind Theme Variables documentation for details.","theme-toggle#Theme Toggle":"hextra-theme-toggle - The theme toggle button"},"title":"Customization"},"/en/docs/advanced/multi-language/":{"data":{"":"Hextra supports creating site with multiple languages using Hugo’s multilingual mode.","enable-multi-language#Enable Multi-language":"To make our site multi-language, we need to tell Hugo the supported languages. We need to add to the site configuration file:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3","manage-translations-by-filename#Manage Translations by Filename":"Hugo supports managing translations by filename. For example, if we have a file content/docs/_index.md in English, we can create a file content/docs/_index.fr.md for French translation.\ncontent\rdocs\r_index.md\r_index.fr.md\r_index.ja.md\rNote: Hugo also supports Translation by content directory.","read-more#Read More":"Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization","translate-menu-items#Translate Menu Items":"To translate menu items in the navigation bar, we need to set the identifier field:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2\rand translate them in the corresponding i18n file:\ni18n/fr.yamldocumentation: Documentation blog: Blog","translate-strings#Translate Strings":"To translate strings on the other places, we need to add the translation to the corresponding i18n file:\ni18n/fr.yamlreadMore: Lire la suite\rA list of strings used in the theme can be found in the i18n/en.yaml file."},"title":"Multi-language"},"/en/docs/getting-started/":{"data":{"":"","add-hextra-theme-as-a-git-submodule#Add Hextra theme as a Git submodule":"Switch to the site directory and initialize a new Git repository:\ncd my-site git init\rThen, add Hextra theme as a Git submodule:\ngit submodule add https://github.com/imfing/hextra.git themes/hextra\rConfigure hugo.yaml to use Hextra theme by adding the following:\ntheme: hextra","configure-hextra-theme-via-module#Configure Hextra theme via module":"# initialize hugo module cd my-site hugo mod init github.com/username/my-site # add Hextra theme hugo mod get github.com/imfing/hextra\rConfigure hugo.yaml to use Hextra theme by adding the following:\nmodule: imports: - path: github.com/imfing/hextra","create-your-first-content-pages#Create your first content pages":"Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md","create-your-first-content-pages-1#Create your first content pages":"Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md","initialize-a-new-hugo-site#Initialize a new Hugo site":"hugo new site my-site --format=yaml","initialize-a-new-hugo-site-1#Initialize a new Hugo site":"hugo new site my-site --format=yaml","next#Next":"Explore the following sections to start adding more contents:\nOrganize Files\rConfiguration\rMarkdown","prerequisites#Prerequisites":"Before starting, you need to have the following software installed:\nHugo (extended version) Git Go","prerequisites-1#Prerequisites":"Before starting, you need to have the following software installed:\nHugo (extended version) Git","preview-the-site-locally#Preview the site locally":"hugo server --buildDrafts --disableFastRender\rVoila, your new site preview is available at http://localhost:1313/.\nHow to update theme?\rTo update all Hugo modules in your project to their latest versions, run the following command:\nhugo mod get -u\rTo update Hextra to the latest released version, run the following command:\nhugo mod get -u github.com/imfing/hextra\rSee Hugo Modules for more details.","preview-the-site-locally-1#Preview the site locally":"hugo server --buildDrafts --disableFastRender\rYour new site preview is available at http://localhost:1313/.\nWhen using CI/CD for Hugo website deployment, it’s essential to ensure that the following command is executed before running the hugo command.\ngit submodule update --init\rFailure to run this command results in the theme folder not being populated with Hextra theme files, leading to a build failure.\nHow to update theme?\rTo update all submodules in your repository to their latest commits, run the following command:\ngit submodule update --remote\rTo update Hextra to the latest commit, run the following command:\ngit submodule update --remote themes/hextra\rSee Git submodules for more details.","quick-start-from-template#Quick Start from Template":"imfing/hextra-starter-template\nYou could quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free. For more options, check out Deploy Site.\n🌐 Demo ↗","setup-hextra-as-git-submodule#Setup Hextra as Git submodule":"","setup-hextra-as-hugo-module#Setup Hextra as Hugo module":"","start-as-new-project#Start as New Project":"There are two main ways to add the Hextra theme to your Hugo project:\nHugo Modules (Recommended): The simplest and recommended method. Hugo modules let you pull in the theme directly from its online source. Theme is downloaded automatically and managed by Hugo.\nGit Submodule: Alternatively, add Hextra as a Git Submodule. The theme is downloaded by Git and stored in your project’s themes folder.","steps#Steps":"","steps-1#Steps":""},"title":"Getting Started"},"/en/docs/guide/":{"data":{"":"Explore the following sections to learn how to use Hextra:\nOrganize Files\rConfiguration\rMarkdown\rSyntax Highlighting\rLaTeX\rDiagrams\rShortcodes\rDeploy Site"},"title":"Guide"},"/en/docs/guide/configuration/":{"data":{"":"Hugo reads its configuration from hugo.yaml in the root of your Hugo site. The config file is where you can configure all aspects of your site. Check out the config file for this site exampleSite/hugo.yaml on GitHub to get a comprehensive idea of available settings and best practices.","additional-formats#Additional Formats":"While favicon.ico is generally for older browsers, modern browsers support SVG favicons which are preferred for their scalability and small file size. Use tools like favicon.io or favycon to generate additional favicon formats if needed.","basic-setup#Basic Setup":"At minimum, include favicon.svg in your static folder. This will be used as the default favicon for your site.\nYou can create an adaptive SVG favicon that responds to system theme preferences by using CSS media queries within the SVG itself, following the approach described in Building an Adaptive Favicon.","copyright#Copyright":"To modify the copyright text displayed in your website’s footer, you’ll need to create a file named i18n/en.yaml. In this file, specify your new copyright text as shown below:\ni18n/en.yamlcopyright: \"© 2024 YOUR TEXT HERE\"\rFor your reference, an example i18n/en.yaml file can be found in the GitHub repository. Additionally, you could use Markdown format in the copyright text.","dark-mode-support#Dark Mode Support":"For enhanced dark mode support, add favicon-dark.svg to your static folder alongside favicon.svg. When both files are present, Hextra will automatically:\nUse favicon.svg for light mode or when no theme preference is detected Switch to favicon-dark.svg when the user’s system is set to dark mode Respect the system’s prefers-color-scheme setting for automatic switching The dark mode favicon switching works across all modern browsers, including Firefox, and provides a seamless experience that matches your site’s theme.","extra-links#Extra Links":"Sidebar extra links are defined under the menu.sidebar section in the config file:\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ↗\" url: \"https://gohugo.io/documentation/\" weight: 3","favicon#Favicon":"To customize the favicon for your site, place icon files under the static folder to override the default favicons from the theme:\nstatic\randroid-chrome-192x192.png\randroid-chrome-512x512.png\rapple-touch-icon.png\rfavicon-16x16.png\rfavicon-32x32.png\rfavicon-dark.svg\rfavicon.ico\rfavicon.svg\rsite.webmanifest","flexsearch-index#FlexSearch Index":"Full-text search powered by FlexSearch is enabled by default. To customize the search index, set the params.search.flexsearch.index parameter in the config file:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content\rOptions for flexsearch.index:\ncontent - full content of the page (default) summary - summary of the page, see Hugo Content Summaries for more details heading - level 1 and level 2 headings title - only include the page title To customize the search tokenize, set the params.search.flexsearch.tokenize parameter in the config file:\nhugo.yamlparams: search: # ... flexsearch: # full | forward | reverse | strict tokenize: forward\rOptions for flexsearch.tokenize:\nstrict - index whole words forward - incrementally index words in forward direction reverse - incrementally index words in both directions full - index every possible combination To exclude a page from the FlexSearch search index, set the excludeSearch: true in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true ---","footer#Footer":"","google-analytics#Google Analytics":"To enable Google Analytics, set services.googleAnalytics.ID flag in hugo.yaml:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID","google-search-index#Google Search Index":"To block Google Search from indexing a page, set noindex to true in your page frontmatter:\ntitle: Configuration (archive version) params: noindex: true\rTo exclude an entire directory, use the cascade key in the parent _index.md file.\nNote\nTo block search crawlers, you can make a robots.txt template. However, robots.txt instructions do not necessarily keep a page out of Google search results.","llmstxt-support#LLMS.txt Support":"To enable llms.txt output format for your site, which provides a structured text outline for large language models and AI agents, add the llms output format to your site’s hugo.yaml:\nhugo.yamloutputs: - home: [html] + home: [html, llms] page: [html] section: [html, rss] This will generate an llms.txt file at your site’s root containing:\nSite title and description Hierarchical listing of all sections and pages Page summaries and publication dates Direct links to all content The llms.txt file is automatically generated from your content structure and makes your site more accessible to AI tools and language models for context and reference.","logo-and-title#Logo and Title":"To modify the default logo, edit hugo.yaml and add the path to your logo file under static directory. Optionally, you can change the link that users are redirected to when clicking on your logo, as well as set the width \u0026 height of the logo in pixels.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20","main-sidebar#Main Sidebar":"For the main sidebar, it is automatically generated from the structure of the content directory. See the Organize Files page for more details.\nTo exclude a single page from the left sidebar, set the sidebar.exclude parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration sidebar: exclude: true ---","menu#Menu":"Top right menu is defined under the menu.main section in the config file:\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github\rThere are different types of menu items:\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs\rLink to an external URL with url - name: GitHub url: \"https://github.com\"\rSearch bar with type: search - name: Search params: type: search\rIcon - name: GitHub params: icon: github\rTheme Toggle - name: Theme Toggle params: type: theme-toggle\rThese menu items can be sorted by setting the weight parameter.","navigation#Navigation":"","nested-menus#Nested Menus":"You can create dropdown menus by defining child menu items. Child menus appear when clicking on the parent menu item.\nhugo.yamlmenu: main: - identifier: sdk name: SDK - identifier: python name: Python ↗ url: https://python.org parent: sdk - identifier: go name: Go url: https://go.dev parent: sdk\rChild menu items need to specify the parent parameter with the parent’s identifier value.","open-graph#Open Graph":"To add Open Graph metadata to a page, add values in the frontmatter params.\nAs a page can have multiple image and video tags, place their values in an array. Other Open Graph properties can have only one value. For example, this page has an og:image tag (which configures an image to preview on social shares) and an og:audio tag.\ncontent/docs/guide/configuration.mdtitle: \"Configuration\" params: images: - \"/img/config-image.jpg\" audio: \"config-talk.mp3\"","others#Others":"","page-edit-link#Page Edit Link":"To configure the page edit link, we can set the params.editURL.base parameter in the config file:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\"\rThe edit links will be automatically generated for each page based on the provided url as root directory. If you want to set edit link for a specific page, you can set the editURL parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" ---","page-last-modification#Page Last Modification":"The date of the page’s last modification can be displayed by enabling the params.displayUpdatedDate flag. To use Git commit date as the source, enable also the enableGitInfo flag.\nTo customize the date format, set the params.dateFormat parameter. Its layout matches Hugo’s time.Format.\nhugo.yaml# Parse Git commit enableGitInfo: true params: # Display the last modification date displayUpdatedDate: true dateFormat: \"January 2, 2006\"","page-width#Page Width":"The width of the page can be customized by the params.page.width parameter in the config file:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide\rThere are three available options: full, wide, and normal. By default, the page width is set to normal.\nSimilarly, the width of the navbar and footer can be customized by the params.navbar.width and params.footer.width parameters.","right-sidebar#Right Sidebar":"","sidebar#Sidebar":"","table-of-contents#Table of Contents":"Table of contents is automatically generated from the headings in the content file. It can be disabled by setting toc: false in the front matter of the page.\ncontent/docs/guide/configuration.md--- title: Configuration toc: false ---","tags#Tags":"To display page tags, set following flags in the config file:\nhugo.yamlparams: blog: list: displayTags: true toc: displayTags: true","theme-configuration#Theme Configuration":"Use the theme setting to configure the default theme mode and toggle button, allowing visitors to switch between light or dark mode.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true\rOptions for theme.default:\nlight - always use light mode dark - always use dark mode system - sync with the operating system setting (default) The theme.displayToggle parameter allows you to display a toggle button for changing themes. When set to true, visitors can switch between light or dark mode, overriding the default setting."},"title":"Configuration"},"/en/docs/guide/deploy-site/":{"data":{"":"Hugo generates static websites, allowing for flexible hosting options. This page provides guides for deploying your Hextra site on various platforms.","cloudflare-pages#Cloudflare Pages":"Put your site source code in a Git repository (e.g. GitHub) Log in to the Cloudflare dashboard and select your account In Account Home, select Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git Select the repository, and in the Set up builds and deployments section, provide the following information: Configuration Value Production branch main Build command hugo --gc --minify Build directory public For more details, check out:\nDeploy a Hugo site. Language support and tools.","github-pages#GitHub Pages":"GitHub Pages is the recommended way to deploy and host your website for free.\nIf you bootstrap the site using hextra-starter-template, it has provided GitHub Actions workflow out-of-the-box that helps automatically deploy to GitHub Pages.\nGitHub Actions Configuration\rBelow is an example configuration from hextra-starter-template:\n.github/workflows/pages.yaml# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: [\"main\"] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.147.7 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod submodules: recursive - name: Setup Go uses: actions/setup-go@v5 with: go-version: '1.22' - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Setup Hugo run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4\rIn your repository settings, set the Pages \u003e Build and deployment \u003e Source to GitHub Actions: By default, the above GitHub Actions workflow .github/workflows/pages.yaml assumes that the site is deploying to https://.github.io//.\nIf you are deploying to https://.github.io/ then modify the --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" If you are deploying to your own domain, please change the --baseURL value accordingly.","netlify#Netlify":"Push your code to your Git repository (GitHub, GitLab, etc.) Import the project to Netlify If you are not using [hextra-starter-template][hextra-starter-template], configure the following manually: Configure the Build command to hugo --gc --minify Specify the Publish directory to public Add Environment variable HUGO_VERSION and set to 0.147.7, or alternatively, set it in netlify.toml file Deploy! Check Hugo on Netlify for more details.","vercel#Vercel":"Push your code to your Git repository (GitHub, GitLab, etc.) Go to Vercel Dashboard and import your Hugo project Configure the project, select Hugo as Framework Preset Override the Build Command and Install command: Set Build Command to hugo --gc --minify Set Install Command to yum install golang"},"title":"Deploy Site"},"/en/docs/guide/diagrams/":{"data":{"":"Currently, Hextra supports Mermaid for diagrams.","mermaid#Mermaid":"Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. For example, Mermaid can render flow charts, sequence diagrams, pie charts and more.\nUsing Mermaid in Hextra is as simple as writing a code block with language set mermaid:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ```\rwill be rendered as:\ngraph TD;\rA--\u003eB;\rA--\u003eC;\rB--\u003eD;\rC--\u003eD;\rSequence diagram:\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!\rFor more information, please refer to Mermaid Documentation."},"title":"Diagrams"},"/en/docs/guide/latex/":{"data":{"":"LaTeX math expressions are rendered using (\\KaTeX) by default. Simply start including them in your Markdown content without any manual configurations.","chemistry-expressions#Chemistry Expressions":"The mhchem extension is enabled by default, allowing you to easily render chemistry equations and formulas.\nInline: (\\ce{H2O}) is water.\nSeparate paragraph:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$\rwill be rendered as:\n$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","configuration#Configuration":"Important\nPlease enable and configure the passthrough extension in the Hugo configuration file, so that Hugo can detect LaTeX math expressions in your Markdown content.\nhugo.yamlmarkup: goldmark: extensions: passthrough: delimiters: block: [['\\[', '\\]'], [\"$$\", \"$$\"]] inline: [['\\(', '\\)']] enable: true","display-math#Display Math":"For expressions that you want to stand on their own in a separate paragraph, use $$ delimiters.\npage.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t)\\, e^{-j \\omega t} \\, dt$$\rwill be rendered as:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t), e^{-j \\omega t} , dt$$\nYou can also use LaTeX environments like aligned for multi-line expressions.\npage.md$$ \\begin{aligned} \\nabla \\cdot \\mathbf{E} \u0026= \\frac{\\rho}{\\varepsilon_0} \\\\ \\nabla \\cdot \\mathbf{B} \u0026= 0 \\\\ \\nabla \\times \\mathbf{E} \u0026= -\\frac{\\partial \\mathbf{B}}{\\partial t} \\\\ \\nabla \\times \\mathbf{B} \u0026= \\mu_0 \\left( \\mathbf{J} + \\varepsilon_0 \\frac{\\partial \\mathbf{E}}{\\partial t} \\right) \\end{aligned} $$\rwill be rendered as:\n$$ \\begin{aligned} \\nabla \\cdot \\mathbf{E} \u0026= \\frac{\\rho}{\\varepsilon_0} \\ \\nabla \\cdot \\mathbf{B} \u0026= 0 \\ \\nabla \\times \\mathbf{E} \u0026= -\\frac{\\partial \\mathbf{B}}{\\partial t} \\ \\nabla \\times \\mathbf{B} \u0026= \\mu_0 \\left( \\mathbf{J} + \\varepsilon_0 \\frac{\\partial \\mathbf{E}}{\\partial t} \\right) \\end{aligned} $$\nFor a list of supported functions, see KaTeX supported functions.","inline-math#Inline Math":"To include an expression within a line of text, wrap it in \\( and \\) delimiters.\npage.mdThis \\(\\sigma(z) = \\frac{1}{1 + e^{-z}}\\) is an inline expression.\rThis ( \\sigma(z) = \\frac{1}{1 + e^{-z}} ) is an inline expression.","katex#KaTeX":"The default setup requires no configuration. Hugo fetches the KaTeX CSS from the CDN. If you need to pin a specific version of KaTeX or use local assets, you can do so in your hugo.yaml file.","math-engine#Math Engine":"KaTeX is the default engine used to render LaTeX math expressions during the build process supported by Hugo.\nThe default is KaTeX, but you can also switch to MathJax if you need features only available in MathJax.","mathjax#MathJax":"Alternatively, you can use MathJax to render math expressions:\nhugo.yamlparams: math: engine: mathjax\rNote\nYou can further customize MathJax (for example, adjust loader options, or change the CDN/source) by overriding the template at layouts/_partials/scripts/mathjax.html in your project. Hugo will use your version instead of the theme’s default.","override-cdn-base-url#Override CDN base URL":"hugo.yamlparams: math: engine: katex katex: base: \"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist\"","usage#Usage":"You can use LaTeX for both inline expressions and for larger blocks of text.","use-local-assets#Use local assets":"You can also place the css file under assets and publish additional font files required by KaTeX.\nhugo.yamlparams: math: engine: katex katex: css: \"css/katex.min.css\" assets: - \"fonts/KaTeX_Main-Regular.woff2\" # Add other font files here\rIt will load the KaTeX CSS file from assets/css/katex.min.css instead of downloading from CDN."},"title":"LaTeX"},"/en/docs/guide/markdown/":{"data":{"":"Hugo supports Markdown syntax for formatting text, creating lists, and more. This page will show you some of the most common Markdown syntax examples.","alerts#Alerts":"NEW Alerts are a Markdown extension based on the blockquote syntax that you can use to emphasize critical information. GitHub-style alerts are supported. Please make sure you are using the latest version of Hextra and Hugo v0.146.0 or later.\nNote\nUseful information that users should know, even when skimming content.\nTip\nHelpful advice for doing things better or more easily.\nImportant\nKey information users need to know to achieve their goal.\nWarning\nUrgent info that needs immediate user attention to avoid problems.\nCaution\nAdvises about risks or negative outcomes of certain actions.\nMarkdown\u003e [!NOTE] \u003e Useful information that users should know, even when skimming content. \u003e [!TIP] \u003e Helpful advice for doing things better or more easily. \u003e [!IMPORTANT] \u003e Key information users need to know to achieve their goal. \u003e [!WARNING] \u003e Urgent info that needs immediate user attention to avoid problems. \u003e [!CAUTION] \u003e Advises about risks or negative outcomes of certain actions.","blockquotes#Blockquotes":"Blockquote with attribution\nDon’t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nMarkdown\u003e Don't communicate by sharing memory, share memory by communicating.\n\u003e — Rob Pike[^1] [^1]: The above quote is excerpted from Rob Pike's [talk](https://www.youtube.com/watch?v=PAAkCSZUG1c) during Gopherfest, November 18, 2015.","code-blocks#Code Blocks":"Syntax Highlighting","configuration#Configuration":"Hugo uses Goldmark for Markdown parsing. Markdown rendering can be configured in hugo.yaml under markup.goldmark. Below is the default configuration for Hextra:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false\rFor more configuration options, see Hugo documentation on Configure Markup.","images#Images":"Markdown![landscape](https://picsum.photos/800/600)\rWith caption:\nLorem Picsum\rMarkdown![landscape](https://picsum.photos/800/600 \"Lorem Picsum\")\rFor more advanced functionality, use Hugo’s built-in Figure shortcode.","inline-markdown-within-tables#Inline Markdown within tables":"Italics Bold Code italics bold code Markdown| Italics | Bold | Code | | :-------- | :------- | :----- | | _italics_ | **bold** | `code` |","learning-resources#Learning Resources":"Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎","lists#Lists":"","markdown-examples#Markdown Examples":"","nested-list#Nested list":"Fruit Apple Orange Banana Dairy Milk Cheese Markdown- Fruit - Apple - Orange - Banana - Dairy - Milk - Cheese","ordered-list#Ordered List":"First item Second item Third item Markdown1. First item 2. Second item 3. Third item","styling-text#Styling Text":"Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* *italicized text* italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript This is a subscript text This is a subscript text Superscript This is a superscript text This is a superscript text","tables#Tables":"Tables aren’t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Markdown| Name | Age | | :---- | :-- | | Bob | 27 | | Alice | 23 |","unordered-list#Unordered List":"List item Another item And another item Markdown* List item * Another item * And another item"},"title":"Markdown"},"/en/docs/guide/organize-files/":{"data":{"":"","add-images#Add Images":"To add images, the easiest way is to put the image files in the same directory as the Markdown file. For example, add an image file image.png alongside the my-page.md file:\ncontent\rdocs\rmy-page.md\rimage.png\rThen, we can use the following Markdown syntax to add the image to the content:\ncontent/docs/my-page.md![](image.png)\rWe can also utilize the page bundles feature of Hugo to organize the image files together with the Markdown file. To achieve that, turn the my-page.md file into a directory my-page and put the content into a file named index.md, and put the image files inside the my-page directory:\ncontent\rdocs\rmy-page\rindex.md\rimage.png\rcontent/docs/my-page/index.md![](image.png)\rAlternatively, we can also put the image files in the static directory, which will make the images available for all pages:\nstatic\rimages\rimage.png\rcontent\rdocs\rmy-page.md\rNote that the image path begins with a slash / and is relative to the static directory:\ncontent/docs/my-page.md![](/images/image.png)","breadcrumb-navigation#Breadcrumb Navigation":"Breadcrumbs are auto-generated based on the directory structure of /content.\nFor example, consider the file structure demonstrated above. Given that structure, the breadcrumbs atop the page at /docs/guide/organize-files/ would appear automatically as follows:\nDocumentation \u003e Guide \u003e Organize Files","configure-content-directory#Configure Content Directory":"By default, the root content/ directory is used by Hugo to build the site. If you need to use a different directory for content, for example docs/, this can be done by setting the contentDir parameter in the site configuration hugo.yaml.","customizing-breadcrumb-link-titles#Customizing Breadcrumb Link Titles":"By default, each breadcrumb link is generated based on that page’s title parameter. You can customize this by specifying a linkTitle.\nFor example, if instead of Organize Files we wanted the breadcrumb to be Foo Bar:\ncontent/docs/guide/organize-files.md--- linkTitle: Foo Bar title: Organize Files ---\rThis would now generate the following breadcrumbs:\nDocumentation \u003e Guide \u003e Foo Bar","directory-structure#Directory Structure":"By default, Hugo searches for Markdown files in the content directory, and the structure of the directory determines the final output structure of your website. Take this site as an example:\ncontent\r_index.md\rdocs\r_index.md\rgetting-started.md\rguide\r_index.md\rorganize-files.md\rblog\r_index.md\rpost-1.md\rEach of the _index.md files is the index page for the corresponding section. The other Markdown files are regular pages.\ncontent\r├── _index.md // \u003c- /\r├── docs\r│ ├── _index.md // \u003c- /docs/\r│ ├── getting-started.md // \u003c- /docs/getting-started/\r│ └── guide\r│ ├── _index.md // \u003c- /docs/guide/\r│ └── organize-files.md // \u003c- /docs/guide/organize-files/\r└── blog\r├── _index.md // \u003c- /blog/\r└── post-1.md // \u003c- /blog/post-1/","example#Example":"Given the following directory structure:\ncontent\r_index.md\rblog\r_index.md\rmy-blog-series\r_index.md\rpost-a\rindex.md\rpost-b\rindex.md\rpost-c\rindex.md\rAnd the following front matter in the posts:\ncontent/blog/my-blog-series/post-a/index.md--- title: Post A weight: 1 ---\rcontent/blog/my-blog-series/post-b/index.md--- title: Post B weight: 2 ---\rcontent/blog/my-blog-series/post-c/index.md--- title: Post C weight: 3 ---\rIf the reader is at the bottom of post-b/index.md, they will see that the next page is post-a, and the previous page is post-c. This is due to reversePagination being set to true by default. This is ok when we want our posts to be displayed in chronological order from latest to oldest. However, in the case of a blog series where there are multiple parts, we typically want people to read the first post, and then move to the second and so on. So we want to disable the reversed ordering.\nWe can turn off reversePagination in every blog post in this series by adding the following front matter to my-blog-series/_index.md\ncontent/blog/my-blog-series/_index.md--- title: My Blog Series cascade: params: reversePagination: false ---\rWe are using cascade here to propagate the setting to all posts in the my-blog-series so that reversePagination is set to false for all descendents. This will now ensure that when the reader is on post-b/index.md they will see that the next page is post-c and the previous page is post-a.","hiding-breadcrumbs#Hiding Breadcrumbs":"You can hide breadcrumbs completely from a page by specifying breadcrumbs: false in its front matter:\ncontent/docs/guide/organize-files.md--- breadcrumbs: false title: Organize Files ---","layouts#Layouts":"Hextra offers three layouts for different content types:\nLayout Directory Features docs content/docs/ Ideal for structured documentation, same as this section. blog content/blog/ For blog postings, with both listing and detailed article views. default All other directories Single-page article view without sidebar. To customize a section to mirror the behavior of a built-in layout, specify the desired type in the front matter of the section’s _index.md.\ncontent/my-docs/_index.md--- title: My Docs cascade: type: docs ---\rThe above example configuration ensures that the content files inside content/my-docs/ will be treated as documentation (docs type) by default.","section-navigation#Section Navigation":"","section-pagination-order#Section Pagination Order":"The order in which pages, accessed via PAGE.PrevInSection and PAGE.NextInSection in a page collection, are ordered, is reversed by default.\nTo disable this reversed ordering you can set the reversePagination custom parameter in the page front matter to false. By default reversePagination is set to true.","sidebar-navigation#Sidebar Navigation":"The sidebar navigation is generated automatically based on the content organization alphabetically. To manually configure the sidebar order, we can use the weight parameter in the front matter of the Markdown files.\ncontent/docs/guide/_index.md--- title: Guide weight: 2 ---\rℹ️\rIt is recommended to keep the sidebar not too deep. If you have a lot of content, consider splitting them into multiple sections."},"title":"Organize Files"},"/en/docs/guide/shortcodes/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout\rCards\rDetails\rFileTree\rIcon\rSteps\rTabs\rAdditional shortcodes provided by Hugo and Hextra:\nJupyter Notebook\ralpha\rOthers"},"title":"Shortcodes"},"/en/docs/guide/shortcodes/callout/":{"data":{"":"A built-in component to show important information to the reader.\nNote\nGitHub-style alerts are supported since v0.9.0. It leverages Markdown syntax to render the callout which ensures better portability and readability of the content.","default#Default":"🌐\rHugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more.\r{{\u003c callout emoji=\"🌐\" \u003e}} Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u003c /callout \u003e}}","error#Error":"🚫\rSomething went wrong and it’s going to explode.\r{{\u003c callout type=\"error\" \u003e}} Something went wrong and it's going to explode. {{\u003c /callout \u003e}}","example#Example":"👾\rA callout is a short piece of text intended to attract attention.\rℹ️\rA callout is a short piece of text intended to attract attention.\r⚠️\rA callout is a short piece of text intended to attract attention.\r🚫\rA callout is a short piece of text intended to attract attention.","info#Info":"ℹ️\rPlease visit GitHub to see the latest releases.\r{{\u003c callout type=\"info\" \u003e}} Please visit GitHub to see the latest releases. {{\u003c /callout \u003e}}","usage#Usage":"","warning#Warning":"⚠️\rThis API will be deprecated in the next version.\r{{\u003c callout type=\"warning\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}"},"title":"Callout"},"/en/docs/guide/shortcodes/cards/":{"data":{"":"","card-parameters#Card Parameters":"Parameter Description link URL (internal or external). title Title heading for the card. subtitle Subtitle heading (supports Markdown). icon Name of the icon. tag Text in tag. tagColor Color of the tag: gray (default), yellow, red and blue.","columns#Columns":"You can specify the maximum number of columns for cards to span by passing the cols parameter to the cards shortcode. Note that columns will still be collapsed on smaller screens.\nTop Card\rBottom Card\rLeft Card\rRight Card\r{{\u003c cards cols=\"1\" \u003e}}\r{{\u003c card link=\"/\" title=\"Top Card\" \u003e}}\r{{\u003c card link=\"/\" title=\"Bottom Card\" \u003e}}\r{{\u003c /cards \u003e}}\r{{\u003c cards cols=\"2\" \u003e}}\r{{\u003c card link=\"/\" title=\"Left Card\" \u003e}}\r{{\u003c card link=\"/\" title=\"Right Card\" \u003e}}\r{{\u003c /cards \u003e}}","example#Example":"Callout\rCard with tag\rcustom tag\rNo Icon\rImage CardInternet Image\rLocal ImageRaw image under static directory.\rLocal ImageImage under assets directory, processed by Hugo.","image-card#Image Card":"Additionally, the card supports adding image and processing through these parameters:\nParameter Description image Specifies the image URL for the card. method Sets Hugo’s image processing method. options Configures Hugo’s image processing options. Card supports three kinds of images:\nRemote image: the full URL in the image parameter. Static image: use the relative path in Hugo’s static/ directory. Processed image: use the relative path in Hugo’s assets/ directory. Hextra auto-detects if image processing is needed during build and applies the options parameter or default settings (Resize, 800x, Quality 80, WebP Format). It currently supports these method: Resize, Fit, Fill and Crop.\nFor more on Hugo’s built in image processing commands, methods, and options see their Image Processing Documentation.","tags#Tags":"Card supports adding tags which could be useful to show extra status information.\nCard with default tag\rtag text\rCard with error tag\rtag text\rCard with info tag\rtag text\rCard with warning tag\rtag text\rImage CardInternet Image\rtag text\r{{\u003c cards \u003e}}\r{{\u003c card link=\"../callout\" title=\"Card with default tag color\" tag=\"tag text\" \u003e}}\r{{\u003c card link=\"../callout\" title=\"Card with default red tag\" tag=\"tag text\" tagType=\"error\" \u003e}}\r{{\u003c card link=\"../callout\" title=\"Card with blue tag\" tag=\"tag text\" tagType=\"info\" \u003e}}\r{{\u003c card link=\"../callout\" title=\"Card with yellow tag\" tag=\"tag text\" tagType=\"warning\" \u003e}}\r{{\u003c /cards \u003e}}","usage#Usage":"{{\u003c cards \u003e}}\r{{\u003c card link=\"../callout\" title=\"Callout\" icon=\"warning\" \u003e}}\r{{\u003c card link=\"../callout\" title=\"Card with tag\" icon=\"tag\" tag= \"A custom tag\" \u003e}}\r{{\u003c card link=\"/\" title=\"No Icon\" \u003e}}\r{{\u003c /cards \u003e}}\r{{\u003c cards \u003e}}\r{{\u003c card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" \u003e}}\r{{\u003c card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" \u003e}}\r{{\u003c card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" \u003e}}\r{{\u003c /cards \u003e}}"},"title":"Cards"},"/en/docs/guide/shortcodes/details/":{"data":{"":"A built-in component to display a collapsible content.","example#Example":"Details\rThis is the content of the details.\nMarkdown is supported.\nClick me to reveal\rThis will be hidden by default.","usage#Usage":"{{% details title=\"Details\" %}} This is the content of the details. Markdown is **supported**. {{% /details %}}\r{{% details title=\"Click me to reveal\" closed=\"true\" %}} This will be hidden by default. {{% /details %}}"},"title":"Details"},"/en/docs/guide/shortcodes/filetree/":{"data":{"":"","example#Example":"content\r_index.md\rdocs\r_index.md\rintroduction.md\rintroduction.fr.md\rhugo.toml","usage#Usage":"Markdown{{\u003c filetree/container \u003e}} {{\u003c filetree/folder name=\"content\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/folder name=\"docs\" state=\"closed\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/file name=\"introduction.md\" \u003e}} {{\u003c filetree/file name=\"introduction.fr.md\" \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c filetree/file name=\"hugo.toml\" \u003e}} {{\u003c /filetree/container \u003e}}"},"title":"FileTree"},"/en/docs/guide/shortcodes/icon/":{"data":{"":"To use this shortcode inline, inline shortcode needs to be enabled in the config:\nhugo.yamlenableInlineShortcodes: true\rList of available icons can be found in data/icons.yaml.","example#Example":"","how-to-add-your-own-icons#How to add your own icons":"Create data/icons.yaml file, then add your own SVG icons in the following format:\ndata/icons.yamlyour-icon: your icon svg content\rIt then can be used in the shortcode like this:\n{{\u003c icon \"your-icon\" \u003e}}\r{{\u003c card icon=\"your-icon\" \u003e}}\rTip: Iconify Design is a great place to find SVG icons for your site.","usage#Usage":"{{\u003c icon \"github\" \u003e}}\rHeroicons v1 outline icons are available out of the box."},"title":"Icon"},"/en/docs/guide/shortcodes/jupyter/":{"data":{"":"Experimental feature to include Jupyter Notebooks via a shortcode. Note that not all cell types are supported.\rJupyter Notebook is a language-agnostic HTML notebook application for Project Jupyter. It allows you to create and share documents that contain live code, equations, visualizations, and narrative text.","data-visualization#Data Visualization":"Below is an example of a simple data visualization using the Seaborn library.\n# Import seaborn import seaborn as sns # Apply the default theme sns.set_theme() # Load an example dataset tips = sns.load_dataset(\"tips\") # Create a visualization sns.relplot( data=tips, x=\"total_bill\", y=\"tip\", col=\"time\", hue=\"smoker\", style=\"smoker\", size=\"size\", )\rMatplotlib is building the font cache; this may take a moment. tips.head()\rtotal_bill tip sex smoker day time size 0 16.99 1.01 Female No Sun Dinner 2 1 10.34 1.66 Male No Sun Dinner 3 2 21.01 3.50 Male No Sun Dinner 3 3 23.68 3.31 Male No Sun Dinner 2 4 24.59 3.61 Female No Sun Dinner 4 total_bill tip sex smoker day time size 0 16.99 1.01 Female No Sun Dinner 2 1 10.34 1.66 Male No Sun Dinner 3 2 21.01 3.50 Male No Sun Dinner 3 3 23.68 3.31 Male No Sun Dinner 2 4 24.59 3.61 Female No Sun Dinner 4","equations#Equations":"The following is an example of a simple equation using LaTeX.\n$$ E = mc^2 $$","example-notebook#Example Notebook":"ℹ️\rThe following is an example of a notebook file that is included in the project assets folder.","how-to-use#How to use":"","using-a-local-notebook#Using a local notebook":"To use the Jupyter Notebook shortcode, you need to have a Jupyter Notebook file in your project. Similar to how you would add images to the project, you can add Jupyter Notebooks to the assets folder.\nassets\rnotebook.ipynb\rcontent\rdocs\rmy-page.md\rInclude the Jupyter Notebook in the page using the jupyter shortcode:\ncontent/docs/my-page.md--- title: My Page math: true --- {{% jupyter \"notebook.ipynb\" %}}\rAlternatively, you can utilize the page bundles feature of Hugo to organize the Jupyter Notebooks together with the Markdown file.\ncontent\rdocs\rmy-page\rindex.md\rnotebook.ipynb\rcontent/docs/my-page/index.md--- title: My Page math: true --- {{% jupyter \"notebook.ipynb\" %}}","using-a-remote-notebook#Using a remote notebook":"You can also use a remote notebook by providing the URL to the notebook file. For example, to include What is the Jupyter Notebook notebook in the page, you can use the following shortcode:\n{{% jupyter \"https://raw.githubusercontent.com/jupyter/notebook/main/docs/source/examples/Notebook/What%20is%20the%20Jupyter%20Notebook.ipynb\" %}}","what-is-the-jupyter-notebook#What is the Jupyter Notebook?":"The Jupyter Notebook is an interactive computing environment that enables users to author notebook documents that include:\nLive code Interactive widgets Plots Narrative text Equations Images Video These documents provide a complete and self-contained record of a computation that can be converted to various formats and shared with others using email, version control systems (like Git/GitHub) or nbviewer.jupyter.org."},"title":"Jupyter Notebook"},"/en/docs/guide/shortcodes/others/":{"data":{"":"ℹ️\rSome of these are Hugo built-in shortcodes. These shortcodes are considered less stable and may be changed anytime.","badge#Badge":"{{\u003c badge \"Badge\" \u003e}}\rResult:\nBadge\rVariants:\n{{\u003c badge content=\"info\" type=\"info\" \u003e}}\r{{\u003c badge content=\"warning\" type=\"warning\" \u003e}}\r{{\u003c badge content=\"error\" type=\"error\" \u003e}}\rResult:\ninfo\rwarning\rerror\rWith link and icon:\n{{\u003c badge content=\"Releases\" link=\"https://github.com/imfing/hextra/releases\" icon=\"github\" \u003e}}\rResult:\nReleases","pdf#PDF":"With PDF shortcode, you can embed a PDF file in your content.\n{{\u003c pdf \"https://example.com/sample.pdf\" \u003e}}\rYou can also place the PDF file in your project directory and use the relative path.\n{{\u003c pdf \"path/to/file.pdf\" \u003e}}\rExample:","youtube#YouTube":"Embed a YouTube video.\n{{\u003c youtube VIDEO_ID \u003e}}\rResult:\nFor more information, see Hugo’s YouTube Shortcode."},"title":"Others"},"/en/docs/guide/shortcodes/steps/":{"data":{"":"A built-in component to display a series of steps.","example#Example":"","step-1#Step 1":"This is the first step.","step-2#Step 2":"This is the second step.","step-3#Step 3":"This is the third step.","usage#Usage":"ℹ️\rPlease note that this shortcode is intended only for Markdown content. If you put HTML content or other shortcodes as step content, it may not render as expected.\rPut Markdown h3 header within steps shortcode.\n{{% steps %}}\r### Step 1\rThis is the first step.\r### Step 2\rThis is the second step.\r{{% /steps %}}"},"title":"Steps"},"/en/docs/guide/shortcodes/tabs/":{"data":{"":"","default#Default":"{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}","example#Example":"macOSLinuxWindows\rmacOS: A desktop operating system by Apple.\rLinux: An open-source operating system.\rWindows: A desktop operating system by Microsoft.","specify-selected-index#Specify Selected Index":"Use defaultIndex property to specify the selected tab. The index starts from 0.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}\rThe YAML tab will be selected by default.\nJSONYAMLTOML\rJSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.\rYAML: YAML is a human-readable data serialization language.\rTOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics.","sync-tabs#Sync Tabs":"Tabs with the same list of items can be synchronized. When enabled, selecting a tab updates all other tabs with the same items and remembers the selection across pages.\nEnable globally in your hugo.yaml under the page section:\nhugo.yamlparams: page: tabs: sync: true\rWith this enabled the following two tab blocks will always display the same selected item:\n{{\u003c tabs items=\"A,B\" \u003e}} {{\u003c tab \u003e}}A content{{\u003c /tab \u003e}} {{\u003c tab \u003e}}B content{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} {{\u003c tabs items=\"A,B\" \u003e}} {{\u003c tab \u003e}}Second A content{{\u003c /tab \u003e}} {{\u003c tab \u003e}}Second B content{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}}","usage#Usage":"","use-markdown#Use Markdown":"Markdown syntax including code block is also supported:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}\r```json\r{ \"hello\": \"world\" }\r```\r{{\u003c /tab \u003e}}\r... add other tabs similarly\r{{\u003c /tabs \u003e}}\rJSONYAMLTOML\r{ \"hello\": \"world\" }\rhello: world\rhello = \"world\""},"title":"Tabs"},"/en/docs/guide/syntax-highlighting/":{"data":{"":"Hugo uses Chroma, a general purpose syntax highlighter in pure Go, for syntax highlighting. It is recommended to use backticks for code blocks in Markdown content. For example:\nMarkdown```python def say_hello(): print(\"Hello!\") ```\rwill be rendered as:\ndef say_hello(): print(\"Hello!\")","copy-button#Copy Button":"By default, copy button is enabled for code blocks. Its behavior can changed by modifying the site configuration file:\nhugo.yaml 42 43 44 45 46 47 params: highlight: copy: enable: true # hover | always display: hover","features#Features":"","filename#Filename":"To add a filename or title to the code block, set attribute filename:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ```\rhello.pydef say_hello(): print(\"Hello!\")","highlighting-lines#Highlighting Lines":"To highlight lines, set attribute hl_lines to a list of line numbers:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ```\rhello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello()","line-numbers#Line Numbers":"To set line numbers, set attribute linenos to table and optionally set linenostart to the starting line number:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ```\r42 43 def say_hello(): print(\"Hello!\")","link-to-file#Link to File":"NEW You can use the base_url attribute to provide a base URL that will be combined with the file name to generate a link.\nThe file name can include a relative path if it specifies the file’s location within the base path.\nMarkdown```go {base_url=\"https://github.com/imfing/hextra/blob/main/\",filename=\"exampleSite/hugo.work\"} go 1.20 ```\rexampleSite/hugo.workgo 1.20","supported-languages#Supported Languages":"For a list of supported languages, please see the Chroma documentation."},"title":"Syntax Highlighting"},"/en/showcase/":{"data":{"":"Open source projects powered by Hextra\rBeginner Privacy\rClace\rRegolith Desktop\rModel Context Protocol Specification\rcellular_raza\rSidekick\rInstall C\rAXIVO Docs\rStanford CS 40\rHelix Docs\rClever Cloud Documentation\rOWASP AI Security and Privacy Guide\rOsuny\rPorter\rHITSZ OpenAuto\rLutheranConfessions\rHextra Starter Template"},"title":"Showcase"}}